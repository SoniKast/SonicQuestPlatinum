<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_time_attack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sets the variable menu
canmove = 1;
menu=1;
turnoff = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//this shows a message saying what ever menu you are on-you can change this to room_goto_next() etc...
if(turnoff = true)
{exit}
if(keyboard_check_pressed(global.key_enter))
{
      turnoff = true;
      switch(menu)
      {
             case 1:
             {    
                  instance_create(0, 0, obj_time_attack_ssz)
                  global.time_attack = false;
                  canselect = 0;
                  canmove = 0;
                  ini_open(working_directory+"\data\save\quest_time_trial_data.bin");
                  {
                      global.best_time_ssz1   = ini_read_real("RIVERSIDE VALLEY 1",   "RVZ1",  0);
                      global.best_time_ssz2   = ini_read_real("RIVERSIDE VALLEY 2",   "RVZ2",  0);                               
                  }
                  ini_close()
                  break;
             }
             case 2:
             {    
                  instance_create(0, 0, obj_time_attack_ggz)
                  global.time_attack = false;
                  canselect = 0;
                  canmove = 0;
                  ini_open(working_directory+"\data\save\quest_time_trial_data.bin");
                  {
                      global.best_time_ggz1   = ini_read_real("PETAL PARK 1",         "PPZ1",  0);
                      global.best_time_ggz2   = ini_read_real("PETAL PARK 2",         "PPZ2",  0);                    
                  }
                  ini_close()
                  break;
             }
             case 3:
             {    
                  instance_create(0, 0, obj_time_attack_ppz)
                  global.time_attack = false;
                  canselect = 0;
                  canmove = 0;
                  ini_open(working_directory+"\data\save\quest_time_trial_data.bin");
                  {
                      global.best_time_ppz1   = ini_read_real("CHAOTIC CASINO 1",     "CCZ1",  0);
                      global.best_time_ppz2   = ini_read_real("CHAOTIC CASINO 2",     "CCZ2",  0);                               
                  }
                  ini_close()
                  break;
             }
             case 4:
             {    
                  instance_create(0, 0, obj_time_attack_jhz)
                  global.time_attack = false;
                  canselect = 0;
                  canmove = 0;
                  ini_open(working_directory+"\data\save\quest_time_trial_data.bin");
                  {
                      global.best_time_ffz1   = ini_read_real("FRANTIC FOREST 1",     "FFZ1",  0); 
                      global.best_time_ffz2   = ini_read_real("FRANTIC FOREST 2",     "FFZ2",  0);                                
                  }
                  ini_close()
                  break;
             }
             case 5:
             {    
                  instance_create(0, 0, obj_time_attack_ccz)
                  global.time_attack = false;
                  canselect = 0;
                  canmove = 0;
                  ini_open(working_directory+"\data\save\quest_time_trial_data.bin");
                  {
                      global.best_time_ccz1   = ini_read_real("WILD WATERWORKS 1",    "WWZ1",  0);
                      global.best_time_ccz2   = ini_read_real("WILD WATERWORKS 2",    "WWZ2",  0);                                 
                  }
                  ini_close()
                  break;
             }
             case 6:
             {    
                  aud_play_sound(general_error, global.sfx_volume, 1, 0, 0);
                  canselect = 1;
                  canmove = 1;
                  turnoff = false;
                  /*instance_create(0, 0, obj_time_attack_egz)
                  global.time_attack = false;
                  canselect = 0;
                  canmove = 0;
                  ini_open(working_directory+"\data\save\quest_time_trial_data.bin");
                  {    
                      global.best_time_ttz1   = ini_read_real("TWISTED TOWERS 1",     "TTZ1",  0);                                 
                      global.best_time_ttz2   = ini_read_real("TWISTED TOWERS 2",     "TTZ2",  0);
                      global.best_time_ttz3   = ini_read_real("TWISTED TOWERS 3",     "TTZ3",  0);                                 
                  }
                  ini_close()*/
                  break;
             }
      }
}
//Play Sound:
sound_stop(general_score_points);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//makes it so it highlights text using depending on what menu's value is
draw_set_halign(fa_center)
draw_sprite(spr_time_attack, menu, x, y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(turnoff = true)
{exit}
if(!instance_exists(obj_fade_to_value))
{
    {
        with(instance_create(x, y, obj_fade_to_value))
        {
        value = rm_title;
        }
    }
    with(obj_title_screen_logo)
    {
    title_menu_option = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(turnoff = true)
{exit}
if (canmove = 1)
{
aud_play_sound(general_score_points, global.sfx_volume, 1, 0, 0)
if menu&lt;6
{menu+=1}
else
{menu=1}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(turnoff = true)
{exit}
if (canmove = 1)
{
aud_play_sound(general_score_points, global.sfx_volume, 1, 0, 0)
if menu&gt;1
{menu-=1}
else
{menu=6}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
