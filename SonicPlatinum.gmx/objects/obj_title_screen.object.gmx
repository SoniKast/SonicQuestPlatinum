<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_title_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initiate variables
// Menu modes
menu_pos             = 0;
menu_active          = 1;
menu_mode            = "TITLE";

// Cheat codes
cheat_code_activated = 0;
easter_egg           = false;
title_sprite         = spr_title_sprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

    // Move
    if(menu_active == 1)
    {
        if(keyboard_check_pressed(global.ip_down))
        {
            if(menu_pos &lt; 1)
            {
                menu_pos += 1;
            }
            else
            {
                menu_pos = 0;
            }    
            // The sound
            if(audio_is_playing(_general_menu_bleep) == true)
            {
               audio_stop(_general_menu_bleep);
            }
            audio_play(_general_menu_bleep, global.sfx_volume);    
        }
        if(keyboard_check_pressed(global.ip_up))
        {
            if(menu_pos &gt; 0)
            {
                menu_pos -= 1;
            }
            else
            {
                menu_pos = 1;
            }
            // The sound
            if(audio_is_playing(_general_menu_bleep) == true)
            {
               audio_stop(_general_menu_bleep);
            }
            audio_play(_general_menu_bleep, global.sfx_volume);    
        }
    }
    
    // Select
    if(menu_active == 1)
    {
        if(keyboard_check_pressed(global.ip_button_s))
        {
            menu_active = 0;
            switch(menu_pos)
            {
                case 0:
                {
                    with(instance_create(x, y, obj_fade_to))
                    {
                        fade_to = global.first_zone;
                    }
                    break;
                }
                case 1:
                {
                    with(instance_create(0, 0, obj_menu_transition))
                    {
                        menu_active      = 0;
                        transition_event = 1;
                    }
                 // menu_active = 1;
                    break;
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Easter Egg.
if(keyboard_check(ord('X')) &amp;&amp; keyboard_check(ord('G')) &amp;&amp; easter_egg == false)
{
    easter_egg = true;
}

if(easter_egg == true &amp;&amp; title_sprite != spr_rsq_title)
{
    title_sprite = spr_rsq_title;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the title screen.
// Mode: Title
if(menu_mode = "TITLE")
{
// Draw the main title sprite:
draw_sprite(title_sprite, 0, 0, 0);

// Draw the menu sprite:
draw_sprite(spr_title_options, menu_pos, 0, 0);
}

// Mode: Sound Test
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
