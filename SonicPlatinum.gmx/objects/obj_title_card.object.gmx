<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999998</depth>
  <persistent>0</persistent>
  <parentName>ctr_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Banner Position.
    banner_x = 55; // Banner's X Position.
    banner_y = -sprite_get_height(spr_title_card_banner); // Banner's Y Position.
    
 // Stripe Position.
    stripe_x = -sprite_get_width(spr_title_card_stripe); // Title cards X Position.
    stripe_y = 96; // Title cards y Position.
    
 // Zone text.
    zone_font     = global.font_hud_titlecard;
    zone_text     = ""; alarm[1] = 3;
    zone_x        = -string_width(zone_text);
    zone_y        = 98;
    zone_add_text = "ZONE"
    zone_add_x    = -string_width(zone_add_text)*2;
    zone_add_y    = 128; 
    zone_act_x    = -sprite_get_width(spr_title_card_act);
    zone_act_y    = 128;
    
 // Title Card State and misc. variables.
    title_state          = 1;  // State of the title card.
    title_delay          = 16; // Delays the title card drawing.
    title_kill_delay     = 80; // How many frames it takes to kill the title card.
    title_advance_delay  = 100;// How many frames it takes to make the title card disappear.
    title_advance2_delay = 80;// How many frames it takes to make the title card disappear.
    title_backdrop_delay = 50;
    tc_backdrop_alpha    = 1; // Alpha of the black backdrop.
    global.display_hud   = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change state.
    
    title_state = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update title card zone index.

    zone_text = global.zone_name;
    zone_x    = -string_width(zone_text)*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change state.
    
    title_state = 2;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Title card.
 
    if(title_delay &gt; 0)
    {
       title_delay -= 1;
    }
    else 
    {
       // Appear.
       if(title_state == 1)
       {
          if(banner_y != 0)
          {
             banner_y = scr_approach(banner_y, 0, 8);
          }
          if(banner_y &gt; -32)
          {
             if(stripe_x != 0)
             {
                stripe_x = scr_approach(stripe_x, 0, 10);
             }
             else
             {
                if(alarm[0] == -1)
                {
                   alarm[0]  = title_advance_delay;
                }
             }
          } 
          if(stripe_x &gt; -16)
          {
             zone_x     = scr_approach(zone_x, 85, 10);
             zone_add_x = scr_approach(zone_add_x, 174, 14);
             zone_act_x = scr_approach(zone_act_x, 229, 18);
          }
       }
       
       // Backdrop
       if(title_state == 2)
       {   
       
       // BLACK.
       if(tc_backdrop_alpha != -2)
           {
              tc_backdrop_alpha -= 0.10;
           }
           
       // Cheesus    
       if(alarm[2] == -1)
            {
                alarm[2]  = title_advance_delay;
            }
       
       }
       
       // Disappear.
       if(title_state == 3)
       {
          banner_y   = scr_approach(banner_y, -sprite_get_height(spr_title_card_banner), 25);
          stripe_x   = scr_approach(stripe_x, -sprite_get_width(spr_title_card_stripe), 28);
          zone_x     = scr_approach(zone_x, view_xview+view_wview*2, 35);
          zone_add_x = scr_approach(zone_add_x, view_xview+view_wview*2, 38);   
          zone_act_x = scr_approach(zone_act_x, view_xview+view_wview*2, 38);      
           
          // Kill.
          if(title_kill_delay &gt; 0)
          {
             title_kill_delay -= 1;
          }
          else
          {
             instance_destroy();
          }
       }       
    }
    // Enable movement:
    if(tc_backdrop_alpha &lt; 1)
    {
       if(instance_exists(obj_character))
       {
          with(obj_character)
          {
               x_allow = 1;
               y_allow = 1;
          }
       }
       if(title_state == 3)
       {
          global.do_time = 1;
       }
       global.display_hud = true;
    }
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw elements.
  
    if(global.zone_act = 1)
    {
        draw_set_color(c_black);
        draw_set_alpha(tc_backdrop_alpha);
        draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);
    }
    draw_set_alpha(1);
    draw_set_color(c_white);
  
 // Banner.
    draw_sprite(spr_title_card_banner, -1, view_xview+banner_x, view_yview+banner_y);
    
 // Stripe
    draw_sprite(spr_title_card_stripe, -1, view_xview+stripe_x, view_yview+stripe_y);

 // Text.
    draw_set_font(zone_font);
    draw_set_color(c_white);
    draw_text(view_xview+zone_x, view_yview+zone_y, zone_text);
    draw_text(view_xview+zone_add_x, view_yview+zone_add_y, zone_add_text);
    draw_sprite(spr_title_card_act, global.zone_act-1, view_xview+zone_act_x, view_yview+zone_act_y);
    draw_set_font(-1); 
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
