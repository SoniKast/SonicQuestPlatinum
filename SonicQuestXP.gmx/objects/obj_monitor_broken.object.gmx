<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monitor_broken</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>ctr_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Movement:
    y_speed   = 0;
    y_gravity = 0.21875;
    landed    = 0;
    
 // Icon:
    icon_position         = 0;
    icon_move_length      = 45;
    icon_disappear_length = 60;
    icon_rewarded         = -1;
    frame                 = 0;
    image_speed           = 0.25;
    
 // Misc.
    palette_pos           = 0;
    _scale                = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gravity.

 // Check for collision:
    repeat(abs(y_speed))
    {
           if(!place_meeting(x, y+sign(y_speed), par_terrain))
           {
              y      += sign(y_speed);
              landed  = false;
           }
           else
           {
              y_speed = 0;
              landed  = true;
           }           
    }
    // Add Gravity:
       if(landed == false)
       {
          y_speed += y_gravity;
          if(y_speed &gt; 12)
          {
             y_speed = 12;
          }
       }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Icon movement.

 // Moving up:
    if(icon_move_length)
    {
       icon_position    -= 1;
       icon_move_length -= 1;
    }
    else
 // Stop moving.
    if(icon_move_length == 0 &amp;&amp; icon_disappear_length)
    {
       icon_disappear_length -= 1;
    }
 
 // Give rewards:
    if(icon_move_length == 0 &amp;&amp; icon_rewarded == -1)
    {
       icon_rewarded = 1;
       event_user(0);
    } 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rewards.

 // Rings: (+10 Rings)
    if(icon_frame == 0)
    {
       global.crings += 10;
       if(audio_is_playing(general_ring_monitor))
       {
          audio_stop(general_ring_monitor);
       }  
       audio_play(general_ring_monitor, global.sfx_volume);       
    }

 // Blue shield. 
    if(icon_frame == 1)
    {
       if(parent.shield_index != 0)
       {
          with(par_shield) instance_destroy();
          parent.shield_index  = 0; 
          parent.shield_object = noone;
       }
       parent.shield_index = SHIELD_BLUE;
       with(instance_create(0, 0, obj_shield_normal))
       {
            parent              = other.parent;
            parent.shield_object = id;
       }
       if(audio_is_playing(shield_get_basic))
       {
          audio_stop(shield_get_basic);
       }  
       audio_play(shield_get_basic, global.sfx_volume);       
    }    

 // Bubble shield. 
    if(icon_frame == 2)
    {
       if(parent.shield_index != 0)
       {
          with(par_shield) instance_destroy();
          parent.shield_index  = 0; 
          parent.shield_object = noone; 
       }
       parent.shield_index = SHIELD_BUBBLE;
       with(instance_create(0, 0, obj_shield_bubble))
       {
            parent               = other.parent;
            parent.shield_object = id;
       }
       if(audio_is_playing(shield_get_bubble))
       {
          audio_stop(shield_get_bubble);
       }  
       audio_play(shield_get_bubble, global.sfx_volume);       
    } 

 // Fire shield. 
    if(icon_frame == 3)
    {
       if(parent.shield_index != 0)
       {
          with(par_shield) instance_destroy();
          parent.shield_index  = 0; 
          parent.shield_object = noone;
       }
       parent.shield_index = SHIELD_FIRE;
       with(instance_create(0, 0, obj_shield_flames))
       {
            parent              = other.parent;
            parent.shield_object = id;
       }
       if(audio_is_playing(shield_get_fire))
       {
          audio_stop(shield_get_fire);
       }  
       audio_play(shield_get_fire, global.sfx_volume);       
    } 

 // Lightning shield. 
    if(icon_frame == 4)
    {
       if(parent.shield_index != 0)
       {
          with(par_shield) instance_destroy();
          parent.shield_index  = 0; 
          parent.shield_object = noone; 
       }
       parent.shield_index = SHIELD_LIGHTNING;
       with(instance_create(0, 0, obj_shield_lightning))
       {
            parent              = other.parent;
            parent.shield_object = id;
       }
       if(audio_is_playing(shield_get_lightning))
       {
          audio_stop(shield_get_lightning);
       }  
       audio_play(shield_get_lightning, global.sfx_volume);       
    }     
    
           
 // Speedshoe:
    if(icon_frame == 5)
    {
       parent.speedshoe_state = 1;
       parent.speedshoe_timer = 1200;
       parent.afterimage_draw = true;
       if(global.ev_volume != 0.0)
       {
          if(audio_is_playing(ev_sneakers))
          {
             audio_stop(ev_sneakers);
          }  
          audio_loop(ev_sneakers, global.ev_volume);    
       }     
    }
        
 // Life:
    if(icon_frame == 6)
    {
       global.clives += 1;
       if(global.ev_volume != 0.0)
       {       
          if(audio_is_playing(ev_life))
          {
             audio_stop(ev_life);
          }  
          audio_play(ev_life, global.ev_volume);
       }
    }
        
 // Invincibility:
    if(icon_frame == 7)
    {
       parent.invincibility       = 2;
       parent.invincibility_timer = 1200;
       if(global.ev_volume != 0.0)
       {       
          if(audio_is_playing(ev_invincibility))
          {
             audio_stop(ev_invincibility);
          }  
          audio_play(ev_invincibility, global.ev_volume);
       }
    }    
        
 // Hurt:
    if(icon_frame == 8)
    {
       with(parent)
       {
            character_state_hurt(other, false);
       }
    }    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Broken Monitor.

 // Main palette:
    palette_pos = icon_frame;
    pal_swap_set(spr_monitor_palette, palette_pos, false);

 // Broken part:
    draw_sprite(sprite_index, -1, x, y)
    
 // Reset the palette:
    pal_swap_reset();
    
 // Draw Icon: 
    if(icon_move_length || icon_disappear_length)
    {  
       if(!icon_move_length)
       {
          if(frame &lt; 3)
          {
             frame += 0.25;
          }
          else frame = 3;
          
          if(_scale != 0 &amp;&amp; icon_disappear_length &lt;= 30)
          {
             _scale += (0-_scale)*0.15;
          }
       }
       else
       {
          frame += 0.25;
       }
       
 // Swap the palette
       pal_swap_set(spr_monitor_flip_palette, palette_pos, false);
       draw_sprite_ext(spr_monitor_flip, floor(frame), x, yy+icon_position, _scale, _scale, 0, c_white, 1);
       
 // Reset the palette:
       pal_swap_reset();
       if(floor(frame) &gt;= 3)
       {
          draw_sprite_ext(spr_monitor_icon, icon_frame, x, yy+icon_position, _scale, _scale, 0, c_white, 1);
       }
       if(frame &gt; 3) frame = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
