<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables
    main_menu_option = 0;
    main_menu_active = 0;
    initialized      = false;
    finished         = false;
    position         = -424;
    position_2       = -424;
    buffer           = false;
    image_speed      = 0.25;
    alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buffer = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate menu control.
    initialized      = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change menu option.

// Change options.
     if(buffer = true)
     {
        if(alarm[1] = -1)
        {
            alarm[1] = 10;
        }
     }
    if(initialized = true)
    {
        position = lerp(position, 0, 0.1);
        position_2 = lerp(position_2, 0, 0.1);
        if(position &gt; -4)
        {
            main_menu_active = 1;
        }
    }
    if(main_menu_active == 1)
    {
       if(keyboard_check_pressed(global.key_down))
       {
          if(main_menu_option &lt; 3)
          {
             main_menu_option += 1;
             aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);
             buffer = true;
          }
          else
          {
             main_menu_option = 0;
             aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);
             buffer = true;    
          }
       }
       if(keyboard_check_pressed(global.key_up))
       {
          if(main_menu_option &gt; 0)
          {
             main_menu_option -= 1;
             aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);      
             buffer = true;
          }
          else
          {
             main_menu_option = 3;
             aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);  
             buffer = true;    
          }
       }  
        // Choose.   
        if(keyboard_check_pressed(global.key_enter))
        {
          main_menu_active = 0;
          aud_play_sound(general_menu_accept, global.sfx_volume, 1, 0, 0);
          switch(main_menu_option)
          {
                 case 0:
                 {
                      draw_background(bg_menu_3, 0, 0);
                      instance_create(0, 0, obj_character_select);
                      instance_destroy();
                      break;
                 }
                 case 1:
                 {
                      with(instance_create(x, y, obj_fade_to_value))
                      {
                          value = rm_time_attack;
                      }
                      break;
                 }
                 case 2:
                 {
                      with(instance_create(x, y, obj_fade_to_value))
                      {
                          value = rm_options;
                      }
                      break;
                 }
                 case 3:
                 {
                      game_end();
                      break;
                 }
          }
       }      
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing the menu
    draw_sprite(spr_main_menu, main_menu_option, 0+position, 58);
    draw_sprite(spr_menu_frame, main_menu_option, 168+position, 34);
    if(buffer = true)
    {
        draw_sprite(spr_menu_transition, -1, 170+position, 36);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
