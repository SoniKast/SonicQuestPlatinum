<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999998</depth>
  <persistent>0</persistent>
  <parentName>obj_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Banner Position.
    banner_x = 55; // Banner's X Position.
    banner_y = -sprite_get_height(spr_title_card_banner); // Banner's Y Position.
    
 // Stripe Position.
    stripe_x = -sprite_get_width(spr_title_card_stripe); // Title cards X Position.
    stripe_y = 96; // Title cards y Position.
    
 // Zone text.
    zone_font     = global.title_card;
    zone_text     = ""; alarm[1] = 3;
    zone_x        = -string_width(zone_text);
    zone_y        = 98;
    zone_add_text = "ZONE"
    zone_add_x    = -string_width(zone_add_text)*4;
    zone_add_y    = 128; 
    zone_act_x    = -sprite_get_width(spr_title_card_act);
    zone_act_y    = 128;
    
 // Title Card State and misc. variables.
    title_state           = 1;  // State of the title card.
    title_delay           = 16; // Delays the title card drawing.
    title_kill_delay      = 80; // How many frames it takes to kill the title card.
    title_advance_delay   = 100;// How many frames it takes to make the title card disappear.
    title_advance2_delay  = 80; // How many frames it takes to make the title card disappear.
    title_backdrop_delay  = 50; // How many frames it takes to fade the black.
    tc_backdrop_alpha     = 1;  // Alpha of the black backdrop.
    transition            = 0;  // Zone transition
    
 // Tween Started Flags
    tween1_started = false;
    tween2_started = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remove the black.
    
    TweenFire(id, EaseInOutQuad, 0, false, 0, 65, "tc_backdrop_alpha", tc_backdrop_alpha, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update title card zone index.

    zone_text = global.zone_name
    zone_x    = -string_width(zone_text)*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change state.
    
    title_state = 2;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Title card.

    // Move the parts
        if tween1_started = false
        { 
          TweenFire(id, EaseInOutQuad, 0, false, 0, 6, "banner_y", banner_y, 0);
          TweenFire(id, EaseInOutQuad, 0, false, 0, 6, "stripe_x", stripe_x, 0);
          TweenFire(id, EaseInOutQuad, 0, false, 0, 8, "zone_x", zone_x, 85);
          TweenFire(id, EaseInOutQuad, 0, false, 0, 8, "zone_add_x", zone_add_x, 174);
          TweenFire(id, EaseInOutQuad, 0, false, 0, 8, "zone_act_x", zone_act_x, 229);
          tween1_started = true;
        }
    // Fade the black
          if(alarm[2] = -1)
          {
          alarm[2] = 60;
          }
    
    // Move everything away once it has faded      
          if(tc_backdrop_alpha == 0)
          {
                if tween2_started = false
                {
                    TweenFire(id, EaseOutQuad, 0, false, 0, 16, "banner_y", banner_y, -sprite_get_height(spr_title_card_banner));
                    TweenFire(id, EaseOutQuad, 0, false, 0, 16, "stripe_x", stripe_x, -sprite_get_width(spr_title_card_stripe));
                    TweenFire(id, EaseOutQuad, 0, false, 0, 16, "zone_x", zone_x, view_xview+view_wview*2);
                    TweenFire(id, EaseOutQuad, 0, false, 0, 16, "zone_add_x", zone_add_x, view_xview+view_wview*2);
                    TweenFire(id, EaseOutQuad, 0, false, 0, 16, "zone_act_x", zone_act_x, view_xview+view_wview*2);
                    
                    tween2_started = true;
                }
    // Sonic Quest Stuff
          if(instance_exists(par_player))
              {
                    with(par_player)
                    {
                        x_allow = 1;
                        y_allow = 1;
                    }
              }
              global.do_time = 1;
          
        // Destroy
          if(alarm[3] = -1)
              {
              alarm[3] = 30;
              }
          }   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw elements.

    // The black screen
        draw_set_color(c_black);
        if(transition = false)
        {
        draw_set_alpha(tc_backdrop_alpha);
        draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);
        }
        draw_set_alpha(1);
        draw_set_color(c_white);
       
     // Don't draw the banner and the stripe if you're in the bonus stage.  
        if(global.BonusStage = false)
        {
     // Banner.
        draw_sprite(spr_title_card_banner, -1, view_xview+banner_x, view_yview+banner_y);
        
     // Stripe
        draw_sprite(spr_title_card_stripe, -1, view_xview+stripe_x, view_yview+stripe_y);
        }
        
     // Text.
        draw_set_font(zone_font);
        draw_set_color(c_white);
        draw_text(view_xview+zone_x, view_yview+zone_y, zone_text);
        draw_text(view_xview+zone_add_x, view_yview+zone_add_y, zone_add_text);
        
     // Don't draw the act number if you're in the bonus stage.
        if(global.BonusStage = false)
        {  
        draw_sprite(spr_title_card_act, global.zone_act-1, view_xview+zone_act_x, view_yview+zone_act_y);
        }
        
     // Stop drawing the font
        draw_set_font(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
