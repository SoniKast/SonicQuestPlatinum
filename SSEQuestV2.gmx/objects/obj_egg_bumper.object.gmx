<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bumpermobile_normal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_boss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
//Here are the main Variables:

//Drawing - HP:
hp = 8 //The Amount of HP this boss has.
st_normal   = (spr_bumpermobile_normal) //The Normal Sprites if not hurt.
st_hurt     = (spr_bumpermobile_hurt)   //The Sprites when being hurt.
st_defeated = (spr_bumpermobile_dead)   //The Sprites when being defeated.
st_move     = (spr_bumpermobile_normal) // The sprites for when he moves
st_flyaway  = (spr_bumpermobile_flee)   // Get out of here, motherfucker!
st_hit      = (spr_bumpermobile_hit)    // he laughs when he hits Sonic
st_intro    = (spr_bumpermobile_hit)    // When he shows up on screen
image_speed = 0.3                       //The Frames Speed.

//Projectiles and States:
state     = (st_intro) //This is the current sprite Dr.Robotnik has.
damaged   = false //Did you hurt Eggy?
defeated  = false //Is Eggy defeated?

//boss_appear = true; //Checks whether the boss just appeared or not.
boss_pos_change = false; //Used to move the boss above the view when it appears.
fly_away  = false //is flying away?

//Float
ang = 0
ang_stop = false
img_dir = 1
ang_radius = 0;

/* Init. Variables */
xspd = -1;
yspd = 0;
platform_offset = 10; //Default at 10. You might need to tweak this with every other platform that uses different sprites.

relative_x = x;        
relative_y = y;
previous_x = x;
previous_y = y;
x_speed    = 0; //The Horizontal Speed.
y_speed    = 0; //The Vertical Speed.       
x_dcspeed  = 0; //Increases/Decreases the horizontal speed when changing direction, aka Oscillating.
y_dcspeed  = 0; //Increases/Decreases the vertical speed  when changing direction, aka Oscillating.

state_ball=-1;

spike_mov_state=1;
spike_mov_max=120;

//Bumper
nodeObj   = par_casino_bumper;
xRadius   = 64;
yRadius   = 64;
angle     = 0;
aSpeed    = 2;
nodeCount = 8;

for(i=0;i&lt;nodeCount;i+=1)
    nodes[i] = instance_create(x,y,par_casino_bumper);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_egg_bumper_mobile_camera){
     instance_destroy();
};
with(par_casino_bumper){
    instance_destroy();
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = (st_normal)
aSpeed = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start flying away
//Stop alarm 2 &amp; 5 &amp; stop floating:
ang_stop = true
alarm[2] = -1;
//Start flying away:
state = st_flyaway
fly_away = true
hspeed = 4
vspeed = -1
image_index = 1
//Filp the image
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Explosions
/* Create the Sound Effect */
aud_play_sound(general_destroy, global.sfx_volume, 1, 0, 0); 

/* Create Explosion */
dummy_effect_create(spr_explosion,0.2,x-random(40)+20,self.y-6+random(20),-2, -1);

//Repeat:
alarm[2] = 10
img_dir = 1

//Stop:
if(alarm[3] = -1){
   alarm[3] = 150;
};

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change State to hurt:
if state = st_normal
{
state = st_hurt
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remove hp:
hp -= 1;
nodeCount -= 1;
aSpeed = 4;
//Change State back:
state = st_normal
damaged = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   for(i=0;i&lt;nodeCount;i+=1){

        if(yRadius &gt;= -sprite_get_height(sprite_index) &amp;&amp; yRadius &lt; sprite_get_height(sprite_index) )
        {
           nodes[i].depth = -sign(1 * (yRadius*(nodes[i].y-other.y))) 
        
        }
        else if(xRadius &gt;= -sprite_get_width(sprite_index)  &amp;&amp; xRadius &lt; sprite_get_width(sprite_index) )
        {
           nodes[i].depth = -sign(1 * (xRadius*(nodes[i].x-other.x)));
        }
        else
        nodes[i].depth = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// The bumpers I guess

    angle += aSpeed;
    
    for(i=0;i&lt;nodeCount;i+=1){
        _r  = i*(360/nodeCount)+angle;
        deg = degtorad(_r);
        _c  = cos(deg);
        _s  = sin(deg);
       
        nodes[i].x = x+xRadius*_c;
        nodes[i].y = y+yRadius*_s;
    }
if state_ball==0{


yRadius +=spike_mov_state


if abs(yRadius)==spike_mov_max{

if yRadius&lt;0{
yRadius+=1;
}

if yRadius&gt;0{
yRadius-=1;
}

spike_mov_state*=-1;

}
/*    xRadius += keyboard_check(vk_up)    - keyboard_check(vk_down);
    yRadius += keyboard_check(vk_right) - keyboard_check(vk_left);
    */
    }
//Activate
if state_ball==-1{
if instance_exists(obj_egg_bumper_mobile_camera){state_ball=0}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Is dead?
//When the Boss Appears on the Screen:
/*if(boss_appear == true){
   if(boss_pos_change == false){
      boss_pos_change = true;
   };
   
   //Y Speed:
   if(y &lt;= obj_cg_mobile_camera.y-_offset-3 ){
      y += ver_speed;
   }else{
    y = obj_cg_mobile_camera.y-_offset-3;
    ver_speed = 0;
   };
   
   //X Speed:
   if(ver_speed == 0 &amp;&amp; x &gt;= obj_cg_mobile_camera.x){
      hor_speed -= hor_acc_dec;
   }else if(ver_speed == 0 &amp;&amp; x &lt;= obj_cg_mobile_camera.x){
      hor_speed = 0;
   }
}
*/
//Speed
x+= xspd;

/* Change the Animation Direction: */
if( xspd &gt; 0 or xspd = 0)
{
image_xscale = 1;
};
else { image_xscale = -1 };

ang_radius +=3
y = ystart+lengthdir_y(6,ang_radius)

//Stop if defeated.
if defeated = true exit

//Check if we still have enough hp:
if hp &gt; 0 // if hp is above 0
{
exit
}
else if hp &lt; 1 //If hp is 0
{
defeated = true
state = st_defeated
alarm[2] = 3
xspd = 0;
image_xscale = 1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* X MOVEMENT */
x += xspd;
y -= yspd;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_moving_dir_right">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspd = 0; 
xspd = 1; 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_moving_dir_left">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state != st_flyaway)
{
yspd = 0; 
xspd = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_moving_dir_down">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspd = 1; 
xspd = 0; 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_moving_dir_up">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspd = -1; 
xspd = 0; 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt Dr.Robotnik.

//If Dead,stop this event:
if defeated = true exit

//Else do this event:
with (par_player)
{
event_user(3)
}
if damaged = true exit //Exit if he is hurt already.
{
alarm[0] = 50
alarm[1] = 1
damaged = true
if !sound_isplaying(general_destroy)
{
aud_play_sound(general_destroy, global.sfx_volume, 1, 0, 0); 
}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if flying away (if defeated.)
if fly_away = true 
{
instance_destroy()
}
else if(state = (st_intro))
{
yspd = 5;
alarm[5] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if flying away (if defeated.)
if fly_away = true 
{
instance_destroy()
}
else if(state = (st_intro))
{
yspd = 5;
alarm[5] = 10;
}  




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw dr.Robotnik:
draw_sprite_ext(state,-1,x,y,image_xscale,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
