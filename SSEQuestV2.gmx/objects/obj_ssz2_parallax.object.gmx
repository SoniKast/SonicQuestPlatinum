<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99999999</depth>
  <persistent>0</persistent>
  <parentName>par_parallax</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The Background System can be used to mimic complex parallax from the
//Genesis games.
/*    parallaxAdd(RepeatedOver, Background, XFactor, XSpeed, XScroll, XOffset, XSeparation, 
                    YFactor, YSpeed, YScroll, YOffset, YSeparation, Left, Top, Width, Height)*/


    OverallYOffset = 0.965;
    
    scr_parallax_add_node(1, backGhzCloudsAct2,       0.83, -0.3, 0, 0, 0,     OverallYOffset, 0, 0, 0, 0,    0, 0, 128, 62);
    scr_parallax_add_node(1, backGhzClouds2Act2,      0.8, -0.2, 0, 0, 0,     OverallYOffset, 0, 0, 62, 0,    0, 0, 128, 58);
    scr_parallax_add_node(1, backGhzMountains1Act2,   0.7,  0, 0, 0, 0,       OverallYOffset, 0, 0, 71, 0,    0, 0, 420, 51);
    scr_parallax_add_node(1, backGhzBushesAct2,       0.65,  0, 0, 0, 0,       OverallYOffset, 0, 0, 71, 0,    0, 0, 256, 83);
    scr_parallax_add_node(1, bg_underwater_backdrop,  0.64,  0, 0, 0, 0,       OverallYOffset, 0, 0, 153, 0,    0, 0, 128, 130);
    scr_parallax_add_node(1, bg_corals1,       0.63,  0, 0, 0, 0,       OverallYOffset, 0, 0, 156, 0,    0, 0, 128, 65);
    scr_parallax_add_node(1, bg_corals2,       0.62,  0, 0, 0, 0,       OverallYOffset, 0, 0, 197, 0,    0, 0, 128, 72);
    scr_parallax_add_node(1, bg_corals3,       0.61,  0, 0, 0, 0,       OverallYOffset, 0, 0, 237, 0,    0, 0, 128, 64);

    // Water    
    RatioY      = OverallYOffset;
    Height      = 153;
    MaxScaleY   = 1.2;
    
//    for (i = 0; i &lt; 15; i+= 1)
//    scr_parallax_add_node(1, backGhzWaterAct2, 0.5-((1+i)/15)*0.5, ((1+i)/15)*-1.8, 0, 0, 0, OverallYOffset, 0, 0, 143+i*12, 0, 0, i*8, 256, 120);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    var _Scale, _i, i;
    
    // Update position, relative to the current scroll
    for (i = 0; i &lt; 15; i+= 1)
    x = floor(view_xview[view_current]*0.5-((1+i)/15)*0.5+0+0);
    y = floor(view_yview[view_current]*RatioY)+Height;
    
    // Calculate scale and limit it over the MaxScaleY
    _Scale = min(max((global.water_position - y)/background_get_height(backGhzWaterAct2), -MaxScaleY), MaxScaleY);
    
    if (instance_exists(obj_player)) {
     if (obj_player.y &gt; global.water_position) MaxScaleY = 1.2 else MaxScaleY = 1;
     } else MaxScaleY = 1;
      
    // Render all the pieces, in movement and properly scaled.
    for (_i = 0; _i&lt;20 _i+=1) {
        draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                x-((current_time*0.01)*_i mod 384), 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);
                                
        draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                (x-((current_time*0.01)*_i mod 384)) + 1536, 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);                     
                                
        draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                (x-((current_time*0.01)*_i mod 384)) + 3072, 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);                      
                                
        draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                (x-((current_time*0.01)*_i mod 384)) + 4608, 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);                     
                                
        draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                (x-((current_time*0.01)*_i mod 384)) + 6144, 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);                  
                                
        draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                (x-((current_time*0.01)*_i mod 384)) + 7680, 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);      
    }
    
/*draw_background_general(backGhzWaterAct2, 0, _i*6, background_get_width(backGhzWaterAct2), 6,
                                x-((current_time*0.01)*_i mod 384), 
                                y+(_i*6)*_Scale, 
                                1, _Scale, 0, c_white, c_white, c_white, c_white, 1);
    
    /* 
    // Water    
    RatioY      = OverallYOffset;
    Height      = 152;
    MaxScaleY   = 1.2;

for (i = 0; i &lt; 15; i+= 1)
    scr_parallax_add_node(1, backGhzWaterAct2, 0.5-((1+i)/15)*0.5, ((1+i)/15)*-1.8, 0, 0, 0, OverallYOffset, 0, 0, 143+i*12, 0, 0, i*8, 256, 120);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
