<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_casino_slotbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Active = true;
ActionTimer = 800;
/*
result[0] = obj_slotpanel01.y1;
result[1] = obj_slotpanel02.y1;
result[2] = obj_slotpanel03.y1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ActionTimer &lt; 0) { ActionTimer = 0; }
if (ActionTimer &gt; 800) { ActionTimer = 800; }

if (ActionTimer == 0)
{
Active = false;
}

if (Active == false)
{
ActionTimer += 50;
}

if (ActionTimer == 800)
{
Active = true;
}
/*
    // Basic slot logic.
    if(Active == true)
    {
    
     // Randomize seed;
        randomize();
        
     // Random chance to get the best result. Increase value in chance(&gt;&lt;) to make it harder.
        var luck;
            luck = (chance(10) == 1);
            
     // Get Slot results.
        for(i=0; i&lt;sprite_get_number(sprite_index); i+=1)
        { 
            result[i] = irandom_range(1, sprite_get_number(sprite_index));
            // If Luck equals true, get the best result:
               if(1 == luck)
               {
                  result[i] = sprite_get_number(sprite_index); // Get the last image number, in the case of this example, 3.
               }
        }
        
     // Prizes.    
     
     // Sonic:
        if(result[0]==1 &amp;&amp; result[1]==1 &amp;&amp; result[2]==1)
        {     
           global.player_rings += 30;
        }
    
     // Tails:
        if(result[0]==2 &amp;&amp; result[1]==2 &amp;&amp; result[2]==2)
        { 
           global.player_rings += 20;
        }
    
     // Knuckles:
        if(result[0]==3 &amp;&amp; result[1]==3 &amp;&amp; result[2]==3)
        { 
           global.player_rings += 25;
        }
    
     // Amy:
        if(result[0]==4 &amp;&amp; result[1]==4 &amp;&amp; result[2]==4)
        { 
           global.player_rings += 15;
        }
    
     // Eggman:
        if(result[0]==5 &amp;&amp; result[1]==5 &amp;&amp; result[2]==5)
        { 
           global.player_rings -= 100;
        }
    
     // Ring:
        if(result[0]==6 &amp;&amp; result[1]==6 &amp;&amp; result[2]==6)
        { 
           global.player_rings += 100;
        }
    
     // Bar:
        if(result[0]==7 &amp;&amp; result[1]==7 &amp;&amp; result[2]==7)
        { 
           global.player_rings += 10;
        }
    
     // Seven:
        if(result[0]==8 &amp;&amp; result[1]==8 &amp;&amp; result[2]==8)
        { 
           global.player_rings += 100;
        }
    
     // Seven and Eggman:
        if(result[0]==8 &amp;&amp; result[1]==5 &amp;&amp; result[2]==5)
        { 
           global.player_rings -= 100;
        }
    
     // Seven, Seven and Eggman:
        if(result[0]==8 &amp;&amp; result[1]==8 &amp;&amp; result[2]==5)
        { 
           global.player_rings -= 100;
        }
    
     // Seven and Sonic:
        if(result[0]==8 &amp;&amp; result[1]==1 &amp;&amp; result[2]==1)
        { 
           global.player_rings += 60;
        }
    
     // Seven and Tails:
        if(result[0]==8 &amp;&amp; result[1]==2 &amp;&amp; result[2]==2)
        { 
           global.player_rings += 40;
        }
    
     // Seven and Knuckles:
        if(result[0]==8 &amp;&amp; result[1]==3 &amp;&amp; result[2]==3)
        { 
           global.player_rings += 45;
        }
        
     // Seven and Amy:
        if(result[0]==8 &amp;&amp; result[1]==4 &amp;&amp; result[2]==4)
        { 
           global.player_rings += 30;
        }
        
     // Seven and Ring:
        if(result[0]==8 &amp;&amp; result[1]==6 &amp;&amp; result[2]==6)
        { 
           global.player_rings += 20;
        }
     // Seven and Bar:
        if(result[0]==8 &amp;&amp; result[1]==7 &amp;&amp; result[2]==7)
        { 
           global.player_rings += 8;
        }
      
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.player_type == IS_PLAYER){
    if (Active == true){
    
    ActionTimer -= 4;
    
    with(self){
    obj_player.x = self.x;
    obj_player.y = self.y;
    }
    
    with(par_player){
    state = STATE_TUBE
    pipe_type = 3;
    pipe_mov_x = 0;
    pipe_mov_y = 0;
    }
    
    with(obj_slotpanel01){
    alarm[0] = 15
    running = true
    run_speed = 7+random(5)
    }
    with(obj_slotpanel02){
    alarm[0] = 30
    running = true
    run_speed = 7+random(5)
    }
    with(obj_slotpanel03){
    alarm[0] = 45
    running = true
    run_speed = 7+random(5)
    }
    }
    else
    with(par_player){
    state = STATE_DEFAULT;
    y_speed -= 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
