<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gumballs</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
    image_speed = 0;
    alarm[0]    = 30;
    Collected   = 0;
    YSpd        = 0;
    YGrv        = 0.21875;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rewards.
    if(Collected != 0){
       if(image_index == 0){
          // Give a certain amount of rings
          global.player_rings += choose(10, 10, 10, 10, 10, 20, 40, 10, 20, 40, 80, 10, 10, 20) 
          aud_play_sound(general_ring, global.sfx_volume, 1, 0, 0);
       }
       if(image_index == 1){
          // Give an extra life
          global.player_lives++
          aud_play_sound(player_life, global.sfx_volume, 1, 0, 0);
       }
       if(image_index == 2){
          // Normal Shield 
          if(par_player.shield != 0)
           { 
              par_player.shield = 0;
              with(par_player.shield_obj)
              {
                   instance_destroy();
              }
              par_player.shield_obj = noone;
           }
           par_player.shield = SHIELD_NORMAL;
           global.BonusShield = SHIELD_NORMAL;
           aud_play_sound(shield_get_normal, global.sfx_volume, 1, 0, 0);
       }
       if(image_index == 3){
          // Bubble Shield 
          if(par_player.shield != 0)
          { 
            par_player.shield = 0;
            with(par_player.shield_obj)
            {
               instance_destroy();
            }
            par_player.shield_obj = noone;
          }
          par_player.shield = SHIELD_BUBBLE;
          global.BonusShield = SHIELD_BUBBLE;
          aud_play_sound(shield_get_bubble, global.sfx_volume, 1, 0, 0);       
       }
       if(image_index == 5){
          // Electric Shield 
          if(par_player.shield != 0)
          { 
            par_player.shield = 0;
            with(par_player.shield_obj)
            {
               instance_destroy();
            }
            par_player.shield_obj = noone;
          }
          par_player.shield = SHIELD_ELECTRICITY;
          global.BonusShield = SHIELD_ELECTRICITY;
          aud_play_sound(shield_get_electricity, global.sfx_volume, 1, 0, 0);      
       }
       if(image_index == 4){
          // Flame Shield 
           if(par_player.shield != 0)
           { 
              par_player.shield = 0;
              with(par_player.shield_obj)
              {
                   instance_destroy();
              }
              par_player.shield_obj = noone;
           }
           par_player.shield = SHIELD_FIRE;
          global.BonusShield = SHIELD_FIRE;
           aud_play_sound(shield_get_flame, global.sfx_volume, 1, 0, 0);         
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change Depth after the plate spawned us.
    depth = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
