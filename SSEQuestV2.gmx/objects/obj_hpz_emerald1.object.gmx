<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_green_emerald</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>obj_indestructible</parentName>
  <maskName>spr_player_mask_small</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 1/4;
can_set_alpha = false;
activated = false;
create_beam = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Change the Speed of the Player: */
with(par_player)
{
state = STATE_TUBE; 
tube_mov_x = 0;
tube_mov_y = -8;
};

/* We can't change the Alpha anymore: */
can_set_alpha = 0;
activated = false;
create_beam = true;

/* Sounds */
if (audio_is_playing(general_teleport_start))
{
 sound_stop(general_teleport_start);
} aud_play_sound(general_teleport, global.sfx_volume, 1, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* This changes the alpha of the player*/
if (can_set_alpha == true)
{
 with(par_player)
 {
 if(animation_alpha &gt;= 0)
  {
  animation_alpha -= 0.04;
  }
  else {animation_alpha = 0};
 }
}

if(global.used_emerald_1 = true)
{
instance_change(obj_g_unused_emerald,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Change the action and Movement.*/

if( instance_exists( par_player) &amp;&amp; other.player_type == IS_PLAYER  )
{ 
 
 /* Change the Player's Alpha: */
 can_set_alpha = true;
 
 /* Create Beam */
 if( create_beam == true )
 {
  create_beam = false;
  instance_create(x+0,y,obj_sanctuary_orb_beam_a);
 };
 
  /* Slowly Move up: */
  if ( activated == true )
  {
   with(par_player)
   {
    state = STATE_TUBE;
    animation = "rolling";
    tube_type   = 3;
    tube_mov_x  = 0;
    tube_mov_y = -0.5; 
    x = obj_hpz_emerald1.x  //instance_place(x, y, obj_sanctuary_orb).x
   }
  }; 

  /* Teleport! */
  if( activated == false )
  {
   if( alarm[0] = -1 )
    {
     alarm[0] = 125;
     activated = true;
     aud_play_sound(general_teleport_start, global.sfx_volume, 1, 0, 0);
    };
   with( par_player )
    {
    x = obj_hpz_emerald1.x //instance_place(x, y, obj_sanctuary_orb).x
    }
  };

};




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
